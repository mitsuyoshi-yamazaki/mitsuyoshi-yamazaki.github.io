[{"content":"This article is automatically generated from the original content\nあれば更新します\n全般 Self-Reproduction and Evolvability 人工生命とは https://scrapbox.io/ayu-mushi/ シミュレーション molcloud - GitHub Open-Endedness For AGI, we need better tasks. For better tasks, we need open-endedness. Minecraft Open-Endedness Challenge プレゼンテーション クレイグ・ベンター 人工生命に関する発表 Games and Artificial Life: Open Endedness as common ground? CoG 2021 Keynote 書籍・論文 http://www.standardinc.jp/books/ Conway\u0026rsquo;s Game of Life Textbook 認知、意図、推論 ベイトソン 精神と自然: 生きた世界の認識論 フランシスコ・ヴァレラ 身体化された心 ウムベルト 知恵の樹 ニクラス・ルーマン 自己言及性について Reward is enough ロルフ・ファイファー 知能の原理 Screeps Screeps #4: Hauling is (NP-)hard Automated planning and scheduling カンファレンス GECKO Newsletter AI 人工知能に関する断創録 言語 Heart of Swift Building the Fastest JS (De)serializer 事業 未踏 育成事業以外は年齢制限がない？ 社会実装できること重視な印象 https://www.ipa.go.jp/jinzai/advanced/2019/koubokekka_index.html チームラボの作品がテレビやスマホのなかに。「フラワーズ ボミング ホーム」を公開 https://naked.co.jp/en/ キャリア メグ・ジェイ: 30歳は昔の20歳ではありません Computer Scienceの学位を取るために学費無料のオンライン大学UoPeopleに入ってもうすぐ1年 Reference Artificial Life Reading List ","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-26-104752.229035/","summary":"This article is automatically generated from the original content\nあれば更新します\n全般 Self-Reproduction and Evolvability 人工生命とは https://scrapbox.io/ayu-mushi/ シミュレーション molcloud - GitHub Open-Endedness For AGI, we need better tasks. For better tasks, we need open-endedness. Minecraft Open-Endedness Challenge プレゼンテーション クレイグ・ベンター 人工生命に関する発表 Games and Artificial Life: Open Endedness as common ground? CoG 2021 Keynote 書籍・論文 http://www.standardinc.jp/books/ Conway\u0026rsquo;s Game of Life Textbook 認知、意図、推論 ベイトソン 精神と自然: 生きた世界の認識論 フランシスコ・ヴァレラ 身体化された心 ウムベルト 知恵の樹 ニクラス・ルーマン 自己言及性について Reward is enough ロルフ・ファイファー 知能の原理 Screeps Screeps #4: Hauling is (NP-)hard Automated planning and scheduling カンファレンス GECKO Newsletter AI 人工知能に関する断創録 言語 Heart of Swift Building the Fastest JS (De)serializer 事業 未踏 育成事業以外は年齢制限がない？ 社会実装できること重視な印象 https://www.","title":"Read it later"},{"content":"This article is automatically generated from the original content\n疲れたので適当に流していたがこの発表はおもしろかった\n細胞のモデルの、同期的並列的に動作する部分と逐次直列で動作する部分をうまく分離してそれぞれ適した実装をしたという発表　String: a programming language for the evolution of ribozymes in a new computational protocell model Proceeding: https://direct.mit.edu/isal/proceedings/isal/54/112248\n細胞の基本的な機能は遺伝子、代謝ネットワーク、細胞膜から成り、これをモデル化したミニマムなProtoCell Modelを生成したという研究\n面白いのは\u0026rsquo;RNA\u0026rsquo;がコードする\u0026rsquo;タンパク質\u0026rsquo;が短いプログラミングコードになっており（タイトルに入っているString言語: 言語仕様はProceedingにある）、それがなんやかや実行されて周囲に作用をするというつくりになっているところ。\nエンコードされているので組み替えも突然変異もできる。Proceedingには設計した\u0026rsquo;タンパク質\u0026rsquo;と進化後それぞれのコードが載っている。\n","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-21-225949.235000/","summary":"This article is automatically generated from the original content\n疲れたので適当に流していたがこの発表はおもしろかった\n細胞のモデルの、同期的並列的に動作する部分と逐次直列で動作する部分をうまく分離してそれぞれ適した実装をしたという発表　String: a programming language for the evolution of ribozymes in a new computational protocell model Proceeding: https://direct.mit.edu/isal/proceedings/isal/54/112248\n細胞の基本的な機能は遺伝子、代謝ネットワーク、細胞膜から成り、これをモデル化したミニマムなProtoCell Modelを生成したという研究\n面白いのは\u0026rsquo;RNA\u0026rsquo;がコードする\u0026rsquo;タンパク質\u0026rsquo;が短いプログラミングコードになっており（タイトルに入っているString言語: 言語仕様はProceedingにある）、それがなんやかや実行されて周囲に作用をするというつくりになっているところ。\nエンコードされているので組み替えも突然変異もできる。Proceedingには設計した\u0026rsquo;タンパク質\u0026rsquo;と進化後それぞれのコードが載っている。","title":"ALIFE2022 Day4"},{"content":"This article is automatically generated from the original content\n英語聴きすぎてよくわからなくなってきた\n参加費にお菓子代が入ってれば経費なのに…\nChemically fueled droplets; towards the synthesis of life ボトムアップで生命の理解を深める\n生命の要素\nSelf-sustaining: 熱的平衡状態を保つ Compartment: ダーウィン進化: 自己複製と突然変異 self-sustaining compartmentをつくる\nエネルギーを取り込んでごみを排出する →化学サイクルを設計する Growing Isotropic Neural Cellular Automata growing neural CA + self organizing texture\nGNCAの問題点：\nanisotropy（異方性）があること：回転させると壊れる\n","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-20-160351.239259/","summary":"This article is automatically generated from the original content\n英語聴きすぎてよくわからなくなってきた\n参加費にお菓子代が入ってれば経費なのに…\nChemically fueled droplets; towards the synthesis of life ボトムアップで生命の理解を深める\n生命の要素\nSelf-sustaining: 熱的平衡状態を保つ Compartment: ダーウィン進化: 自己複製と突然変異 self-sustaining compartmentをつくる\nエネルギーを取り込んでごみを排出する →化学サイクルを設計する Growing Isotropic Neural Cellular Automata growing neural CA + self organizing texture\nGNCAの問題点：\nanisotropy（異方性）があること：回転させると壊れる","title":"ALIFE2022 Day3"},{"content":"This article is automatically generated from the original content\nアブストの載っているプログラムを翻訳したのち聞くようにしたら多少わかるようになった…か？わからん\nオーストラリアのソフトウェアエンジニアの参加者に、Tierraで個体長を大きくする淘汰圧はどう実装するかやオートエンコーダで創発が検出できるのではといった話を聞いた。聞き返せると6割くらいはわかる\nEmpathic Active Inference: Active Inference with Empathy Mechanism for Socially Behaved Artificial Agent 共感の認知機能を実装することでエージェントに利他的なふるまいをさせることを可能にしたという発表\nそのようなエージェントも利己的な集団に突っ込むと利己的にふるまうようなので、単に他者の利益を評価してそのようにふるまっているわけではない\nVoluntary safety pledges overcome over-regulation dilemma in AI development: an evolutionary game analysis エージェントの行動を直接的に制限するのではなく、制約を設けることにより自発的にある行動を抑制するような仕組みを作ったという発表\nSimulations of Vesicular Distanglement 細胞の小胞体間の接続をどのように切り離すかシミュレーションで研究したという発表\n時間になっても発表者が現れなかったため昼休みになった。自由かよ\n泡状の物体をどう分裂させるかという話なのだったら気になっていたので後で見直したい\n泡のような形状を自律的につくる系をつくるのは簡単で、互いに接続しつつ体積あたりの表面積が最小になるような制約をかければすぐできる。\n一方でこれを分裂させようとするのはその制約に反するため難しい。\nより大きな制約をつくって、「今までの制約は大きな制約のひとつの側面でしかないんですよ、こういう条件では制約が緩くなりますよ」ということにするか、別の仕組みを導入して力技でなんとかするか、現実の生命はどうやっているんだろうね？\nEvolving Unbounded Neural Complexity in Pursuit-Evasion Games 共進化で個体の複雑さは増加する\nprior workに出ていた言語推測ゲームって立命館大学の谷口先生かな？\nFirefly-inspired vocabulary generator for communication in multi-agent systems 蛍が群れていると自分の点滅パターンが大勢に埋もれてしまい相手に届かないため、埋もれないような点滅パターンをどのように生成するかという発表\nAlternative Comfortの研究と似てるかな\nその他に気になった発表 Testing the Efficiency of a Genome-Wide Association Study on a Computational Evolutionary Model 手法として取り入れたALifeモデルが面白そうだった ","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-19-171558.333498/","summary":"This article is automatically generated from the original content\nアブストの載っているプログラムを翻訳したのち聞くようにしたら多少わかるようになった…か？わからん\nオーストラリアのソフトウェアエンジニアの参加者に、Tierraで個体長を大きくする淘汰圧はどう実装するかやオートエンコーダで創発が検出できるのではといった話を聞いた。聞き返せると6割くらいはわかる\nEmpathic Active Inference: Active Inference with Empathy Mechanism for Socially Behaved Artificial Agent 共感の認知機能を実装することでエージェントに利他的なふるまいをさせることを可能にしたという発表\nそのようなエージェントも利己的な集団に突っ込むと利己的にふるまうようなので、単に他者の利益を評価してそのようにふるまっているわけではない\nVoluntary safety pledges overcome over-regulation dilemma in AI development: an evolutionary game analysis エージェントの行動を直接的に制限するのではなく、制約を設けることにより自発的にある行動を抑制するような仕組みを作ったという発表\nSimulations of Vesicular Distanglement 細胞の小胞体間の接続をどのように切り離すかシミュレーションで研究したという発表\n時間になっても発表者が現れなかったため昼休みになった。自由かよ\n泡状の物体をどう分裂させるかという話なのだったら気になっていたので後で見直したい\n泡のような形状を自律的につくる系をつくるのは簡単で、互いに接続しつつ体積あたりの表面積が最小になるような制約をかければすぐできる。\n一方でこれを分裂させようとするのはその制約に反するため難しい。\nより大きな制約をつくって、「今までの制約は大きな制約のひとつの側面でしかないんですよ、こういう条件では制約が緩くなりますよ」ということにするか、別の仕組みを導入して力技でなんとかするか、現実の生命はどうやっているんだろうね？\nEvolving Unbounded Neural Complexity in Pursuit-Evasion Games 共進化で個体の複雑さは増加する\nprior workに出ていた言語推測ゲームって立命館大学の谷口先生かな？\nFirefly-inspired vocabulary generator for communication in multi-agent systems 蛍が群れていると自分の点滅パターンが大勢に埋もれてしまい相手に届かないため、埋もれないような点滅パターンをどのように生成するかという発表\nAlternative Comfortの研究と似てるかな","title":"ALIFE2022 Day2"},{"content":"This article is automatically generated from the original content\n今年はイタリアなのでCESTで時差は7時間\n全て英語なので事前にアブストを読んで話の流れを掴んでおかないとだいたいわからない\nThe evolution of adaptive phenotypic plasticity stabilizes populations against environmental fluctuations Phenotypic plasticity:\nwhich is the capacity for a single genotype to produce alternate phenotypes depending on environmental conditions.\nAdoptive phenotypic plasticity: 〜が個体の生存に有利であること\ndigital organism(Avida)でモデルを検証\n餌（reword）と毒(punish)をもつ環境　餌と毒が逆のふたつの環境を用意し、その環境を交互に切り替える\nみっつの実験\nplastic 環境の変化を検出できる non-plastic 環境の変化を検出できない static 環境の変化がない（全て餌 non-plasticのみ突然変異率と表現型の変化率が桁幾つというレベルで高かった\nEvolving Programmable Computational Metamaterials ファジーな論理ゲートを生成するみたいなモデルが面白かった\n粒子の運動がどのように伝播するか、入力の粒子と出力の粒子を用意して入力粒子を動かして出力の粒子の動きを出力として扱う\nその他に気になった発表 Is Prediction Required? Using Evolutionary Robotics to Investigate How Systems Cope with Self-Caused Stimuli Dirty Transmission Hypothesis: Increased Mutations During Horizontal Transmission Can Select for Increased Levels of Mutualism in Endosymbionts Finding Chemical Organisations in Matter-Conserving AChems ","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-18-193111.491634/","summary":"This article is automatically generated from the original content\n今年はイタリアなのでCESTで時差は7時間\n全て英語なので事前にアブストを読んで話の流れを掴んでおかないとだいたいわからない\nThe evolution of adaptive phenotypic plasticity stabilizes populations against environmental fluctuations Phenotypic plasticity:\nwhich is the capacity for a single genotype to produce alternate phenotypes depending on environmental conditions.\nAdoptive phenotypic plasticity: 〜が個体の生存に有利であること\ndigital organism(Avida)でモデルを検証\n餌（reword）と毒(punish)をもつ環境　餌と毒が逆のふたつの環境を用意し、その環境を交互に切り替える\nみっつの実験\nplastic 環境の変化を検出できる non-plastic 環境の変化を検出できない static 環境の変化がない（全て餌 non-plasticのみ突然変異率と表現型の変化率が桁幾つというレベルで高かった\nEvolving Programmable Computational Metamaterials ファジーな論理ゲートを生成するみたいなモデルが面白かった\n粒子の運動がどのように伝播するか、入力の粒子と出力の粒子を用意して入力粒子を動かして出力の粒子の動きを出力として扱う\nその他に気になった発表 Is Prediction Required? Using Evolutionary Robotics to Investigate How Systems Cope with Self-Caused Stimuli Dirty Transmission Hypothesis: Increased Mutations During Horizontal Transmission Can Select for Increased Levels of Mutualism in Endosymbionts Finding Chemical Organisations in Matter-Conserving AChems ","title":"ALIFE2022 Day1"},{"content":"This article is automatically generated from the original content\n記事に対して機械翻訳を含む自然言語処理を行えるようにするため、人間が記述するMarkdownの自然言語部分のみを取り出す処理を書きます\n正規表現で全て判別できたのでわりあい簡単にできた\n要件 Markdownで記述している記事の内容を、機械翻訳を含む任意の自然言語処理に渡せるようにする 仕様 Markdownをある程度パースして自然言語の文のみを抽出する 直近で使うのは他言語コンテンツ自動生成における機械翻訳なので、生成処理の部分を置き換える 実装 Markdownパーサー 行ごとに分割したうえで、自然言語ではない以下の構文を取り除く Hugoの制御構文である ^\\n*---\\n(\\n|.)*?\\n---\\n Markdownのprefixである ^(\u0026gt;|\\s*(#####|####|###|##|#|- \\[ \\]|- \\[x\\]|-|\\d+\\.)) 他言語コンテンツ生成処理の変更点 機械翻訳は未着手なのでとりあえず「機械生成の文ですよ」という一文を挿入する Reference Pull Request 翻訳スクリプト ","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-14-004507.913203/","summary":"This article is automatically generated from the original content\n記事に対して機械翻訳を含む自然言語処理を行えるようにするため、人間が記述するMarkdownの自然言語部分のみを取り出す処理を書きます\n正規表現で全て判別できたのでわりあい簡単にできた\n要件 Markdownで記述している記事の内容を、機械翻訳を含む任意の自然言語処理に渡せるようにする 仕様 Markdownをある程度パースして自然言語の文のみを抽出する 直近で使うのは他言語コンテンツ自動生成における機械翻訳なので、生成処理の部分を置き換える 実装 Markdownパーサー 行ごとに分割したうえで、自然言語ではない以下の構文を取り除く Hugoの制御構文である ^\\n*---\\n(\\n|.)*?\\n---\\n Markdownのprefixである ^(\u0026gt;|\\s*(#####|####|###|##|#|- \\[ \\]|- \\[x\\]|-|\\d+\\.)) 他言語コンテンツ生成処理の変更点 機械翻訳は未着手なのでとりあえず「機械生成の文ですよ」という一文を挿入する Reference Pull Request 翻訳スクリプト ","title":"自然言語処理の前処理を実装"},{"content":"Requirements make English version of the contents those are in the original language (Japanese) to make them use a machine translation[^1] manually write an English contents if possible[^2] ^1: I need a hook that the machine translation is triggered in the build phase\n^2: the build phase must distinguish the contents those are manually written to not override them by machine translation\nMultilingualization on Hugo Hugo automatically publishes multilingual sites by preparing a content file with the same name for each languages.\nHowever it\u0026rsquo;s impossible to show the content in the original language when the translated content file doesn\u0026rsquo;t exist.\nWe have to implement such function ourselves.\nhttps://gohugo.io/content-management/multilingual/#translate-your-content\nSpecification Prerequisite all contents exist on the original language (Japanese) some of them have manually translated but other are not automatically make an English translation of content - that is lacking a translation - during the build phase the tanslation runs in CI before Hugo builds html files Implementation The script (create_multilingual_contents.py) does:\nrecursively looks up xxx.ja-jp.md files in content/ directory if the translation (xxx.en.md) does not exists, creates it and copies the original file contents Operation all contents files in the original language are made with name xxx.ja-jp.md if I translate a content by myself, create a file with name xxx.en.md the CI takes care of the rest TODO the operation doesn\u0026rsquo;t work on the local environment (it does work, but we have to remove the automatically created translations) Reference Pull Request ","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-09-231640.217284/","summary":"Requirements make English version of the contents those are in the original language (Japanese) to make them use a machine translation[^1] manually write an English contents if possible[^2] ^1: I need a hook that the machine translation is triggered in the build phase\n^2: the build phase must distinguish the contents those are manually written to not override them by machine translation\nMultilingualization on Hugo Hugo automatically publishes multilingual sites by preparing a content file with the same name for each languages.","title":"Multilingualization"},{"content":"This article is automatically generated from the original content\n論文 Where did the pupa come from? The timing of juvenile hormone signalling supports homology between stages of hemimetabolous and holometabolous insects https://royalsocietypublishing.org/doi/full/10.1098/rstb.2019.0064\n定期的に話題に上る「蛹の起源」について。\n２大学説（「蛹＝終齢幼虫」vs「蛹＝全幼虫齢」）についてレビューし、変態制御遺伝子群の機能からも検討。\nhttps://twitter.com/Cyclommatism/status/1545369213212463105?s=20\u0026amp;t=SkllRtNcehkcRyMvwd1GyA\nWeight Agnostic Neural Networks Neural netの接続トポロジーのみを進化的計算で求め、学習（結合荷重の最適化）を省略することで高速に計算する手法\nhttps://weightagnostic.github.io\nわれわれががんばって学習させていたのは一体…？\n学習ありの場合の進化計算よりは時間かかる（要するに結合加重込みのトポロジーの最適解を求めているので）と思うのだけどどうなんじゃろ\n","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-08-231044.708063/","summary":"This article is automatically generated from the original content\n論文 Where did the pupa come from? The timing of juvenile hormone signalling supports homology between stages of hemimetabolous and holometabolous insects https://royalsocietypublishing.org/doi/full/10.1098/rstb.2019.0064\n定期的に話題に上る「蛹の起源」について。\n２大学説（「蛹＝終齢幼虫」vs「蛹＝全幼虫齢」）についてレビューし、変態制御遺伝子群の機能からも検討。\nhttps://twitter.com/Cyclommatism/status/1545369213212463105?s=20\u0026amp;t=SkllRtNcehkcRyMvwd1GyA\nWeight Agnostic Neural Networks Neural netの接続トポロジーのみを進化的計算で求め、学習（結合荷重の最適化）を省略することで高速に計算する手法\nhttps://weightagnostic.github.io\nわれわれががんばって学習させていたのは一体…？\n学習ありの場合の進化計算よりは時間かかる（要するに結合加重込みのトポロジーの最適解を求めているので）と思うのだけどどうなんじゃろ","title":"2022-07-08 論文"},{"content":"This article is automatically generated from the original content\nCollective Intelligence in Living/NonLiving System 何が生物の集団の中の個体の元気さを決定するのか？\nboidの個体数を1000~100000と変化させ群れの変動や密度を計測すると\nfluctuation: 変動\nperspectives on collective vitality\n0. Excitable media as a common property\nKinetic energy / templature Susceptibility of a collective Network structure Tetrahymena\n水中の単細胞\n","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-08-220928.687840/","summary":"This article is automatically generated from the original content\nCollective Intelligence in Living/NonLiving System 何が生物の集団の中の個体の元気さを決定するのか？\nboidの個体数を1000~100000と変化させ群れの変動や密度を計測すると\nfluctuation: 変動\nperspectives on collective vitality\n0. Excitable media as a common property\nKinetic energy / templature Susceptibility of a collective Network structure Tetrahymena\n水中の単細胞","title":"Collective Intelligence in Living/NonLiving System"},{"content":"This article is automatically generated from the original content\n自分の思索やらを記録しておきたいという要望が以前からあり、今までは物理のノートやTwitter, note, Zennや社内wikiなどに書いていましたが、\nデータが手元に残らないため失われる可能性がある 一元管理できない 内容を機械処理（翻訳、言語解析等）にかけるのが面倒 relationalな内容をそのように管理/取り扱いすることができない という問題がありました。\nrelationalな内容の管理とは、アイデアや思想はその周辺のアイデアとのつながりがあってこそ活きるので、人間の頭の中で起きているような連想を行える何者かのことです。\n要件 サイトのコンセプトが要件です\nなんでも書ける 書いたものはローカル/GitHubに残せる 書いたものを構造化できる 書いたものを後処理にかけられる 仕様 Git管理にする 静的HTMLをホスティングする 動的にする理由もないし… ホスティングはGitHub Pagesを利用 楽やねん ジェネレータはHugoを利用 なんでも良かったのだが、元コンテンツをMarkdownで記述できることと、GitHub Pagesが利用しているJekyllはGitHub Action上での変更容易性がなさそう\u0026amp;Ruby製なので中立のHugoにした ビルド\u0026amp;デプロイはGitHub Actionを利用 楽やねん relationalな内容の管理 どうしようね？ 実装・運用 静的HTML生成〜公開はHugoのドキュメンテーションが詳しく、おおよそ詰まらずにできた\n→ Hugoを使用したGitHub Pages用の静的HTML生成\nrelationalな内容の管理 実装を試みたことはある（BidirectionalEditor）がデータがない状態ではモチベーションが続かなかったので、まずコンテンツを拡充するのが当面の目標。\n各記事/記事中の用語に対してその説明/他の記事が紐づけられていて、ユーザー体験としては相互にリンクされたそれを自由に行き来できるというものになるはず。\n静的HTML + 手作業で行うこともおそらく可能なのでスモールスタートでやってみてもいい。\n本格的に機械的に行うなら毎ビルド時に総ざらいするよりDB入れたほうがいいが…とりま体験を先に作ってみましょう。\nその他 GitHub ActionでHugoのビルドに使用している peaceiris/actions-gh-pages@v3 はかなり用途が特定されている印象があるので複雑な処理を挟む場合は自前で書き直すかも 記事の体を成すものはですます調、それ以外は適当 ","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-07-155059.470834/","summary":"This article is automatically generated from the original content\n自分の思索やらを記録しておきたいという要望が以前からあり、今までは物理のノートやTwitter, note, Zennや社内wikiなどに書いていましたが、\nデータが手元に残らないため失われる可能性がある 一元管理できない 内容を機械処理（翻訳、言語解析等）にかけるのが面倒 relationalな内容をそのように管理/取り扱いすることができない という問題がありました。\nrelationalな内容の管理とは、アイデアや思想はその周辺のアイデアとのつながりがあってこそ活きるので、人間の頭の中で起きているような連想を行える何者かのことです。\n要件 サイトのコンセプトが要件です\nなんでも書ける 書いたものはローカル/GitHubに残せる 書いたものを構造化できる 書いたものを後処理にかけられる 仕様 Git管理にする 静的HTMLをホスティングする 動的にする理由もないし… ホスティングはGitHub Pagesを利用 楽やねん ジェネレータはHugoを利用 なんでも良かったのだが、元コンテンツをMarkdownで記述できることと、GitHub Pagesが利用しているJekyllはGitHub Action上での変更容易性がなさそう\u0026amp;Ruby製なので中立のHugoにした ビルド\u0026amp;デプロイはGitHub Actionを利用 楽やねん relationalな内容の管理 どうしようね？ 実装・運用 静的HTML生成〜公開はHugoのドキュメンテーションが詳しく、おおよそ詰まらずにできた\n→ Hugoを使用したGitHub Pages用の静的HTML生成\nrelationalな内容の管理 実装を試みたことはある（BidirectionalEditor）がデータがない状態ではモチベーションが続かなかったので、まずコンテンツを拡充するのが当面の目標。\n各記事/記事中の用語に対してその説明/他の記事が紐づけられていて、ユーザー体験としては相互にリンクされたそれを自由に行き来できるというものになるはず。\n静的HTML + 手作業で行うこともおそらく可能なのでスモールスタートでやってみてもいい。\n本格的に機械的に行うなら毎ビルド時に総ざらいするよりDB入れたほうがいいが…とりま体験を先に作ってみましょう。\nその他 GitHub ActionでHugoのビルドに使用している peaceiris/actions-gh-pages@v3 はかなり用途が特定されている印象があるので複雑な処理を挟む場合は自前で書き直すかも 記事の体を成すものはですます調、それ以外は適当 ","title":"このサイトについて"},{"content":"This article is automatically generated from the original content\n人工生命研究会#4でお勧めされた本\nRolf Pheifer 知能の原理 Niklas Luhmann 自己言及性について Humberto Maturana 知恵の樹 ウムベルトの本 身体化された心 精神と自然 肝心の勧められた理由を忘れた\nDDD関連でお勧めされた本\nエンタープライズアプリケーションアーキテクチャパターン みんな読んでるのは実践ドメイン駆動設計 ","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-07-150404.782474/","summary":"This article is automatically generated from the original content\n人工生命研究会#4でお勧めされた本\nRolf Pheifer 知能の原理 Niklas Luhmann 自己言及性について Humberto Maturana 知恵の樹 ウムベルトの本 身体化された心 精神と自然 肝心の勧められた理由を忘れた\nDDD関連でお勧めされた本\nエンタープライズアプリケーションアーキテクチャパターン みんな読んでるのは実践ドメイン駆動設計 ","title":"2022 07 07 15:04:04.782474"},{"content":"This is a test article written in English.\nIn the Japanese page, there\u0026rsquo;s Hugo cheat sheet.\n","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/test/","summary":"This is a test article written in English.\nIn the Japanese page, there\u0026rsquo;s Hugo cheat sheet.","title":"Test"}]