[{"content":"This article is automatically generated from the original content\n記事に対して機械翻訳を含む自然言語処理を行えるようにするため、人間が記述するMarkdownの自然言語部分のみを取り出す処理を書きます\n正規表現で全て判別できたのでわりあい簡単にできた\n要件 Markdownで記述している記事の内容を、機械翻訳を含む任意の自然言語処理に渡せるようにする 仕様 Markdownをある程度パースして自然言語の文のみを抽出する 直近で使うのは他言語コンテンツ自動生成における機械翻訳なので、生成処理の部分を置き換える 実装 Markdownパーサー 行ごとに分割したうえで、自然言語ではない以下の構文を取り除く Hugoの制御構文である ^\\n*---\\n(\\n|.)*?\\n---\\n Markdownのprefixである ^(\u0026gt;|\\s*(#####|####|###|##|#|- \\[ \\]|- \\[x\\]|-|\\d+\\.)) 他言語コンテンツ生成処理の変更点 機械翻訳は未着手なのでとりあえず「機械生成の文ですよ」という一文を挿入する Reference Pull Request 翻訳スクリプト ","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-14-004507.913203/","summary":"This article is automatically generated from the original content\n記事に対して機械翻訳を含む自然言語処理を行えるようにするため、人間が記述するMarkdownの自然言語部分のみを取り出す処理を書きます\n正規表現で全て判別できたのでわりあい簡単にできた\n要件 Markdownで記述している記事の内容を、機械翻訳を含む任意の自然言語処理に渡せるようにする 仕様 Markdownをある程度パースして自然言語の文のみを抽出する 直近で使うのは他言語コンテンツ自動生成における機械翻訳なので、生成処理の部分を置き換える 実装 Markdownパーサー 行ごとに分割したうえで、自然言語ではない以下の構文を取り除く Hugoの制御構文である ^\\n*---\\n(\\n|.)*?\\n---\\n Markdownのprefixである ^(\u0026gt;|\\s*(#####|####|###|##|#|- \\[ \\]|- \\[x\\]|-|\\d+\\.)) 他言語コンテンツ生成処理の変更点 機械翻訳は未着手なのでとりあえず「機械生成の文ですよ」という一文を挿入する Reference Pull Request 翻訳スクリプト ","title":"自然言語処理の前処理を実装"},{"content":"Requirements make English version of the contents those are in the original language (Japanese) to make them use a machine translation[^1] manually write an English contents if possible[^2] ^1: I need a hook that the machine translation is triggered in the build phase\n^2: the build phase must distinguish the contents those are manually written to not override them by machine translation\nMultilingualization on Hugo Hugo automatically publishes multilingual sites by preparing a content file with the same name for each languages.\nHowever it\u0026rsquo;s impossible to show the content in the original language when the translated content file doesn\u0026rsquo;t exist.\nWe have to implement such function ourselves.\nhttps://gohugo.io/content-management/multilingual/#translate-your-content\nSpecification Prerequisite all contents exist on the original language (Japanese) some of them have manually translated but other are not automatically make an English translation of content - that is lacking a translation - during the build phase the tanslation runs in CI before Hugo builds html files Implementation The script (create_multilingual_contents.py) does:\nrecursively looks up xxx.ja-jp.md files in content/ directory if the translation (xxx.en.md) does not exists, creates it and copies the original file contents Operation all contents files in the original language are made with name xxx.ja-jp.md if I translate a content by myself, create a file with name xxx.en.md the CI takes care of the rest TODO the operation doesn\u0026rsquo;t work on the local environment (it does work, but we have to remove the automatically created translations) Reference Pull Request ","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-09-231640.217284/","summary":"Requirements make English version of the contents those are in the original language (Japanese) to make them use a machine translation[^1] manually write an English contents if possible[^2] ^1: I need a hook that the machine translation is triggered in the build phase\n^2: the build phase must distinguish the contents those are manually written to not override them by machine translation\nMultilingualization on Hugo Hugo automatically publishes multilingual sites by preparing a content file with the same name for each languages.","title":"Multilingualization"},{"content":"This article is automatically generated from the original content\n論文 Where did the pupa come from? The timing of juvenile hormone signalling supports homology between stages of hemimetabolous and holometabolous insects https://royalsocietypublishing.org/doi/full/10.1098/rstb.2019.0064\n定期的に話題に上る「蛹の起源」について。\n２大学説（「蛹＝終齢幼虫」vs「蛹＝全幼虫齢」）についてレビューし、変態制御遺伝子群の機能からも検討。\nhttps://twitter.com/Cyclommatism/status/1545369213212463105?s=20\u0026amp;t=SkllRtNcehkcRyMvwd1GyA\nWeight Agnostic Neural Networks Neural netの接続トポロジーのみを進化的計算で求め、学習（結合荷重の最適化）を省略することで高速に計算する手法\nhttps://weightagnostic.github.io\nわれわれががんばって学習させていたのは一体…？\n学習ありの場合の進化計算よりは時間かかる（要するに結合加重込みのトポロジーの最適解を求めているので）と思うのだけどどうなんじゃろ\n","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-08-231044.708063/","summary":"This article is automatically generated from the original content\n論文 Where did the pupa come from? The timing of juvenile hormone signalling supports homology between stages of hemimetabolous and holometabolous insects https://royalsocietypublishing.org/doi/full/10.1098/rstb.2019.0064\n定期的に話題に上る「蛹の起源」について。\n２大学説（「蛹＝終齢幼虫」vs「蛹＝全幼虫齢」）についてレビューし、変態制御遺伝子群の機能からも検討。\nhttps://twitter.com/Cyclommatism/status/1545369213212463105?s=20\u0026amp;t=SkllRtNcehkcRyMvwd1GyA\nWeight Agnostic Neural Networks Neural netの接続トポロジーのみを進化的計算で求め、学習（結合荷重の最適化）を省略することで高速に計算する手法\nhttps://weightagnostic.github.io\nわれわれががんばって学習させていたのは一体…？\n学習ありの場合の進化計算よりは時間かかる（要するに結合加重込みのトポロジーの最適解を求めているので）と思うのだけどどうなんじゃろ","title":"2022-07-08 論文"},{"content":"This article is automatically generated from the original content\nCollective Intelligence in Living/NonLiving System 何が生物の集団の中の個体の元気さを決定するのか？\nboidの個体数を1000~100000と変化させ群れの変動や密度を計測すると\nfluctuation: 変動\nperspectives on collective vitality\n0. Excitable media as a common property\nKinetic energy / templature Susceptibility of a collective Network structure Tetrahymena\n水中の単細胞\n","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-08-220928.687840/","summary":"This article is automatically generated from the original content\nCollective Intelligence in Living/NonLiving System 何が生物の集団の中の個体の元気さを決定するのか？\nboidの個体数を1000~100000と変化させ群れの変動や密度を計測すると\nfluctuation: 変動\nperspectives on collective vitality\n0. Excitable media as a common property\nKinetic energy / templature Susceptibility of a collective Network structure Tetrahymena\n水中の単細胞","title":"Collective Intelligence in Living/NonLiving System"},{"content":"This article is automatically generated from the original content\n自分の思索やらを記録しておきたいという要望が以前からあり、今までは物理のノートやTwitter, note, Zennや社内wikiなどに書いていたが、\nデータが手元に残らないため失われる可能性がある 一元管理できない 内容を機械処理（翻訳、言語解析等）にかけるのが面倒 relationalな内容をそのように管理/取り扱いすることができない という問題があった。\nrelationalな内容の管理とは、アイデアや思想はその周辺のアイデアとのつながりがあってこそ活きるので、人間の頭の中で起きているような連想を行える何者かのこと。\n要件 このサイトのコンセプトはそのまま要件になっている\nなんでも書ける 書いたものはローカル/GitHubに残せる 書いたものを構造化できる 書いたものを後処理にかけられる 仕様 Git管理にする 静的HTMLをホスティングする 動的にする理由もないし… ホスティングはGitHub Pagesを利用 楽やねん ジェネレータはHugoを利用 なんでも良かったのだが、元コンテンツをMarkdownで記述できることと、GitHub Pagesが利用しているJekyllはGitHub Action上での変更容易性がなさそう\u0026amp;Ruby製なので中立のHugoにした ビルド\u0026amp;デプロイはGitHub Actionを利用 楽やねん relationalな内容の管理 どうしようね？ 実装・運用 静的HTML生成〜公開はHugoのドキュメンテーションが詳しく、おおよそ詰まらずにできた\n→ Hugoを使用したGitHub Pages用の静的HTML生成\nrelationalな内容の管理 実装を試みたことはある（BidirectionalEditor）がデータがない状態ではモチベーションが続かなかったので、まずコンテンツを拡充するのが当面の目標。\n各記事/記事中の用語に対してその説明/他の記事が紐づけられていて、ユーザー体験としては相互にリンクされたそれを自由に行き来できるというものになるはず。\n静的HTML + 手作業で行うこともおそらく可能なのでスモールスタートでやってみてもいい。\n本格的に機械的に行うなら毎ビルド時に総ざらいするよりDB入れたほうがいいが…とりま体験を先に作ってみましょう。\nその他 GitHub ActionでHugoのビルドに使用している peaceiris/actions-gh-pages@v3 はかなり用途が特定されている印象があるので複雑な処理を挟む場合は自前で書き直すかも ","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-07-155059.470834/","summary":"This article is automatically generated from the original content\n自分の思索やらを記録しておきたいという要望が以前からあり、今までは物理のノートやTwitter, note, Zennや社内wikiなどに書いていたが、\nデータが手元に残らないため失われる可能性がある 一元管理できない 内容を機械処理（翻訳、言語解析等）にかけるのが面倒 relationalな内容をそのように管理/取り扱いすることができない という問題があった。\nrelationalな内容の管理とは、アイデアや思想はその周辺のアイデアとのつながりがあってこそ活きるので、人間の頭の中で起きているような連想を行える何者かのこと。\n要件 このサイトのコンセプトはそのまま要件になっている\nなんでも書ける 書いたものはローカル/GitHubに残せる 書いたものを構造化できる 書いたものを後処理にかけられる 仕様 Git管理にする 静的HTMLをホスティングする 動的にする理由もないし… ホスティングはGitHub Pagesを利用 楽やねん ジェネレータはHugoを利用 なんでも良かったのだが、元コンテンツをMarkdownで記述できることと、GitHub Pagesが利用しているJekyllはGitHub Action上での変更容易性がなさそう\u0026amp;Ruby製なので中立のHugoにした ビルド\u0026amp;デプロイはGitHub Actionを利用 楽やねん relationalな内容の管理 どうしようね？ 実装・運用 静的HTML生成〜公開はHugoのドキュメンテーションが詳しく、おおよそ詰まらずにできた\n→ Hugoを使用したGitHub Pages用の静的HTML生成\nrelationalな内容の管理 実装を試みたことはある（BidirectionalEditor）がデータがない状態ではモチベーションが続かなかったので、まずコンテンツを拡充するのが当面の目標。\n各記事/記事中の用語に対してその説明/他の記事が紐づけられていて、ユーザー体験としては相互にリンクされたそれを自由に行き来できるというものになるはず。\n静的HTML + 手作業で行うこともおそらく可能なのでスモールスタートでやってみてもいい。\n本格的に機械的に行うなら毎ビルド時に総ざらいするよりDB入れたほうがいいが…とりま体験を先に作ってみましょう。\nその他 GitHub ActionでHugoのビルドに使用している peaceiris/actions-gh-pages@v3 はかなり用途が特定されている印象があるので複雑な処理を挟む場合は自前で書き直すかも ","title":"このサイトについて"},{"content":"This article is automatically generated from the original content\n人工生命研究会#4でお勧めされた本\nRolf Pheifer 知能の原理 Niklas Luhmann 自己言及性について Humberto Maturana 知恵の樹 ウムベルトの本 身体化された心 精神と自然 肝心の勧められた理由を忘れた\nDDD関連でお勧めされた本\nエンタープライズアプリケーションアーキテクチャパターン みんな読んでるのは実践ドメイン駆動設計 ","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/2022-07-07-150404.782474/","summary":"This article is automatically generated from the original content\n人工生命研究会#4でお勧めされた本\nRolf Pheifer 知能の原理 Niklas Luhmann 自己言及性について Humberto Maturana 知恵の樹 ウムベルトの本 身体化された心 精神と自然 肝心の勧められた理由を忘れた\nDDD関連でお勧めされた本\nエンタープライズアプリケーションアーキテクチャパターン みんな読んでるのは実践ドメイン駆動設計 ","title":"2022 07 07 15:04:04.782474"},{"content":"This is a test article in English.\nHogehoge\n","permalink":"https://mitsuyoshi-yamazaki.github.io/posts/test/","summary":"This is a test article in English.\nHogehoge","title":"Test"}]