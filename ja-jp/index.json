[{"content":"今年はイタリアなのでCESTで時差は7時間\n全て英語なので事前にアブストを読んで話の流れを掴んでおかないとだいたいわからない\nThe evolution of adaptive phenotypic plasticity stabilizes populations against environmental fluctuations Phenotypic plasticity:\nwhich is the capacity for a single genotype to produce alternate phenotypes depending on environmental conditions.\nAdoptive phenotypic plasticity: 〜が個体の生存に有利であること\ndigital organism(Avida)でモデルを検証\n餌（reword）と毒(punish)をもつ環境　餌と毒が逆のふたつの環境を用意し、その環境を交互に切り替える\nみっつの実験\nplastic 環境の変化を検出できる non-plastic 環境の変化を検出できない static 環境の変化がない（全て餌 non-plasticのみ突然変異率と表現型の変化率が桁幾つというレベルで高かった\nEvolving Programmable Computational Metamaterials ファジーな論理ゲートを生成するみたいなモデルが面白かった\n粒子の運動がどのように伝播するか、入力の粒子と出力の粒子を用意して入力粒子を動かして出力の粒子の動きを出力として扱う\nその他に気になった発表 Is Prediction Required? Using Evolutionary Robotics to Investigate How Systems Cope with Self-Caused Stimuli Dirty Transmission Hypothesis: Increased Mutations During Horizontal Transmission Can Select for Increased Levels of Mutualism in Endosymbionts Finding Chemical Organisations in Matter-Conserving AChems ","permalink":"https://mitsuyoshi-yamazaki.github.io/ja-jp/posts/2022-07-18-193111.491634/","summary":"今年はイタリアなのでCESTで時差は7時間\n全て英語なので事前にアブストを読んで話の流れを掴んでおかないとだいたいわからない\nThe evolution of adaptive phenotypic plasticity stabilizes populations against environmental fluctuations Phenotypic plasticity:\nwhich is the capacity for a single genotype to produce alternate phenotypes depending on environmental conditions.\nAdoptive phenotypic plasticity: 〜が個体の生存に有利であること\ndigital organism(Avida)でモデルを検証\n餌（reword）と毒(punish)をもつ環境　餌と毒が逆のふたつの環境を用意し、その環境を交互に切り替える\nみっつの実験\nplastic 環境の変化を検出できる non-plastic 環境の変化を検出できない static 環境の変化がない（全て餌 non-plasticのみ突然変異率と表現型の変化率が桁幾つというレベルで高かった\nEvolving Programmable Computational Metamaterials ファジーな論理ゲートを生成するみたいなモデルが面白かった\n粒子の運動がどのように伝播するか、入力の粒子と出力の粒子を用意して入力粒子を動かして出力の粒子の動きを出力として扱う\nその他に気になった発表 Is Prediction Required? Using Evolutionary Robotics to Investigate How Systems Cope with Self-Caused Stimuli Dirty Transmission Hypothesis: Increased Mutations During Horizontal Transmission Can Select for Increased Levels of Mutualism in Endosymbionts Finding Chemical Organisations in Matter-Conserving AChems ","title":"ALIFE2022 Day1"},{"content":"記事に対して機械翻訳を含む自然言語処理を行えるようにするため、人間が記述するMarkdownの自然言語部分のみを取り出す処理を書きます\n正規表現で全て判別できたのでわりあい簡単にできた\n要件 Markdownで記述している記事の内容を、機械翻訳を含む任意の自然言語処理に渡せるようにする 仕様 Markdownをある程度パースして自然言語の文のみを抽出する 直近で使うのは他言語コンテンツ自動生成における機械翻訳なので、生成処理の部分を置き換える 実装 Markdownパーサー 行ごとに分割したうえで、自然言語ではない以下の構文を取り除く Hugoの制御構文である ^\\n*---\\n(\\n|.)*?\\n---\\n Markdownのprefixである ^(\u0026gt;|\\s*(#####|####|###|##|#|- \\[ \\]|- \\[x\\]|-|\\d+\\.)) 他言語コンテンツ生成処理の変更点 機械翻訳は未着手なのでとりあえず「機械生成の文ですよ」という一文を挿入する Reference Pull Request 翻訳スクリプト ","permalink":"https://mitsuyoshi-yamazaki.github.io/ja-jp/posts/2022-07-14-004507.913203/","summary":"記事に対して機械翻訳を含む自然言語処理を行えるようにするため、人間が記述するMarkdownの自然言語部分のみを取り出す処理を書きます\n正規表現で全て判別できたのでわりあい簡単にできた\n要件 Markdownで記述している記事の内容を、機械翻訳を含む任意の自然言語処理に渡せるようにする 仕様 Markdownをある程度パースして自然言語の文のみを抽出する 直近で使うのは他言語コンテンツ自動生成における機械翻訳なので、生成処理の部分を置き換える 実装 Markdownパーサー 行ごとに分割したうえで、自然言語ではない以下の構文を取り除く Hugoの制御構文である ^\\n*---\\n(\\n|.)*?\\n---\\n Markdownのprefixである ^(\u0026gt;|\\s*(#####|####|###|##|#|- \\[ \\]|- \\[x\\]|-|\\d+\\.)) 他言語コンテンツ生成処理の変更点 機械翻訳は未着手なのでとりあえず「機械生成の文ですよ」という一文を挿入する Reference Pull Request 翻訳スクリプト ","title":"自然言語処理の前処理を実装"},{"content":"しました\nHugoが基本的な機能の提供に終始してくれているため、その上では自由に実装できて特に問題もなく要件の実装ができた。\n要件 基本的に日本語で記述する 英語版もつくる 機械翻訳で英訳する[^1] 機械翻訳を手作業で修正することもある[^2] ^1より、英語版コンテンツ生成に介入できる口が必要\n^1と^2より、手動で翻訳したコンテンツと機械生成されたコンテンツの判別が必要\nHugoの多言語対応設定 コンテンツ（記事）の多言語対応は言語ごとの同名のファイルを用意することで行われ、翻訳がない場合にデフォルト言語のコンテンツを表示する、などのフォールバックはないためそのままでは要件を満たせない\nhttps://gohugo.io/content-management/multilingual/#translate-your-content\n仕様 想定 日本語には必ず全てのコンテンツファイルがある 全てのコンテンツに英語版ファイルがあるとは限らない Hugoの多言語対応機能に載せると「コンテンツがない場合はデフォルトの言語の記事を表示する」をやりにくいためビルドの前処理で他言語ファイルを生成する 機械翻訳は挟める余地のみ残して実装は後回し。ひとまず日本語コンテンツのコピーを生成することでよしとする 実装 スクリプト（create_multilingual_contents.py）で以下を行う★\ncontent/ 以下の .ja-jp.md ファイルを再帰的にリストアップする 対応言語（現在は英語のみ）のファイルがなければ内容をコピーした .en.md ファイルを生成する ★をGitHub Action上でHugoのビルド処理を行う直前に実行することで、ホスティングしている環境のみで他言語対応コンテンツを生成する\n運用 日本語コンテンツ生成時は .ja-jp.md で生成する 自分で英訳する場合は \u0026lt;対応するファイル名\u0026gt;.en.md で生成する あとはCIがやる 課題 ローカル環境で他言語コンテンツ生成を行った場合は、そのファイルを削除しておかないとその後更新されなくなってしまう Reference Pull Request ","permalink":"https://mitsuyoshi-yamazaki.github.io/ja-jp/posts/2022-07-09-231640.217284/","summary":"しました\nHugoが基本的な機能の提供に終始してくれているため、その上では自由に実装できて特に問題もなく要件の実装ができた。\n要件 基本的に日本語で記述する 英語版もつくる 機械翻訳で英訳する[^1] 機械翻訳を手作業で修正することもある[^2] ^1より、英語版コンテンツ生成に介入できる口が必要\n^1と^2より、手動で翻訳したコンテンツと機械生成されたコンテンツの判別が必要\nHugoの多言語対応設定 コンテンツ（記事）の多言語対応は言語ごとの同名のファイルを用意することで行われ、翻訳がない場合にデフォルト言語のコンテンツを表示する、などのフォールバックはないためそのままでは要件を満たせない\nhttps://gohugo.io/content-management/multilingual/#translate-your-content\n仕様 想定 日本語には必ず全てのコンテンツファイルがある 全てのコンテンツに英語版ファイルがあるとは限らない Hugoの多言語対応機能に載せると「コンテンツがない場合はデフォルトの言語の記事を表示する」をやりにくいためビルドの前処理で他言語ファイルを生成する 機械翻訳は挟める余地のみ残して実装は後回し。ひとまず日本語コンテンツのコピーを生成することでよしとする 実装 スクリプト（create_multilingual_contents.py）で以下を行う★\ncontent/ 以下の .ja-jp.md ファイルを再帰的にリストアップする 対応言語（現在は英語のみ）のファイルがなければ内容をコピーした .en.md ファイルを生成する ★をGitHub Action上でHugoのビルド処理を行う直前に実行することで、ホスティングしている環境のみで他言語対応コンテンツを生成する\n運用 日本語コンテンツ生成時は .ja-jp.md で生成する 自分で英訳する場合は \u0026lt;対応するファイル名\u0026gt;.en.md で生成する あとはCIがやる 課題 ローカル環境で他言語コンテンツ生成を行った場合は、そのファイルを削除しておかないとその後更新されなくなってしまう Reference Pull Request ","title":"サイトの多言語対応"},{"content":"論文 Where did the pupa come from? The timing of juvenile hormone signalling supports homology between stages of hemimetabolous and holometabolous insects https://royalsocietypublishing.org/doi/full/10.1098/rstb.2019.0064\n定期的に話題に上る「蛹の起源」について。\n２大学説（「蛹＝終齢幼虫」vs「蛹＝全幼虫齢」）についてレビューし、変態制御遺伝子群の機能からも検討。\nhttps://twitter.com/Cyclommatism/status/1545369213212463105?s=20\u0026amp;t=SkllRtNcehkcRyMvwd1GyA\nWeight Agnostic Neural Networks Neural netの接続トポロジーのみを進化的計算で求め、学習（結合荷重の最適化）を省略することで高速に計算する手法\nhttps://weightagnostic.github.io\nわれわれががんばって学習させていたのは一体…？\n学習ありの場合の進化計算よりは時間かかる（要するに結合加重込みのトポロジーの最適解を求めているので）と思うのだけどどうなんじゃろ\n","permalink":"https://mitsuyoshi-yamazaki.github.io/ja-jp/posts/2022-07-08-231044.708063/","summary":"論文 Where did the pupa come from? The timing of juvenile hormone signalling supports homology between stages of hemimetabolous and holometabolous insects https://royalsocietypublishing.org/doi/full/10.1098/rstb.2019.0064\n定期的に話題に上る「蛹の起源」について。\n２大学説（「蛹＝終齢幼虫」vs「蛹＝全幼虫齢」）についてレビューし、変態制御遺伝子群の機能からも検討。\nhttps://twitter.com/Cyclommatism/status/1545369213212463105?s=20\u0026amp;t=SkllRtNcehkcRyMvwd1GyA\nWeight Agnostic Neural Networks Neural netの接続トポロジーのみを進化的計算で求め、学習（結合荷重の最適化）を省略することで高速に計算する手法\nhttps://weightagnostic.github.io\nわれわれががんばって学習させていたのは一体…？\n学習ありの場合の進化計算よりは時間かかる（要するに結合加重込みのトポロジーの最適解を求めているので）と思うのだけどどうなんじゃろ","title":"2022-07-08 論文"},{"content":"Collective Intelligence in Living/NonLiving System 何が生物の集団の中の個体の元気さを決定するのか？\nboidの個体数を1000~100000と変化させ群れの変動や密度を計測すると\nfluctuation: 変動\nperspectives on collective vitality\n0. Excitable media as a common property\nKinetic energy / templature Susceptibility of a collective Network structure Tetrahymena\n水中の単細胞\n","permalink":"https://mitsuyoshi-yamazaki.github.io/ja-jp/posts/2022-07-08-220928.687840/","summary":"Collective Intelligence in Living/NonLiving System 何が生物の集団の中の個体の元気さを決定するのか？\nboidの個体数を1000~100000と変化させ群れの変動や密度を計測すると\nfluctuation: 変動\nperspectives on collective vitality\n0. Excitable media as a common property\nKinetic energy / templature Susceptibility of a collective Network structure Tetrahymena\n水中の単細胞","title":"Collective Intelligence in Living/NonLiving System"},{"content":"自分の思索やらを記録しておきたいという要望が以前からあり、今までは物理のノートやTwitter, note, Zennや社内wikiなどに書いていたが、\nデータが手元に残らないため失われる可能性がある 一元管理できない 内容を機械処理（翻訳、言語解析等）にかけるのが面倒 relationalな内容をそのように管理/取り扱いすることができない という問題があった。\nrelationalな内容の管理とは、アイデアや思想はその周辺のアイデアとのつながりがあってこそ活きるので、人間の頭の中で起きているような連想を行える何者かのこと。\n要件 このサイトのコンセプトはそのまま要件になっている\nなんでも書ける 書いたものはローカル/GitHubに残せる 書いたものを構造化できる 書いたものを後処理にかけられる 仕様 Git管理にする 静的HTMLをホスティングする 動的にする理由もないし… ホスティングはGitHub Pagesを利用 楽やねん ジェネレータはHugoを利用 なんでも良かったのだが、元コンテンツをMarkdownで記述できることと、GitHub Pagesが利用しているJekyllはGitHub Action上での変更容易性がなさそう\u0026amp;Ruby製なので中立のHugoにした ビルド\u0026amp;デプロイはGitHub Actionを利用 楽やねん relationalな内容の管理 どうしようね？ 実装・運用 静的HTML生成〜公開はHugoのドキュメンテーションが詳しく、おおよそ詰まらずにできた\n→ Hugoを使用したGitHub Pages用の静的HTML生成\nrelationalな内容の管理 実装を試みたことはある（BidirectionalEditor）がデータがない状態ではモチベーションが続かなかったので、まずコンテンツを拡充するのが当面の目標。\n各記事/記事中の用語に対してその説明/他の記事が紐づけられていて、ユーザー体験としては相互にリンクされたそれを自由に行き来できるというものになるはず。\n静的HTML + 手作業で行うこともおそらく可能なのでスモールスタートでやってみてもいい。\n本格的に機械的に行うなら毎ビルド時に総ざらいするよりDB入れたほうがいいが…とりま体験を先に作ってみましょう。\nその他 GitHub ActionでHugoのビルドに使用している peaceiris/actions-gh-pages@v3 はかなり用途が特定されている印象があるので複雑な処理を挟む場合は自前で書き直すかも ","permalink":"https://mitsuyoshi-yamazaki.github.io/ja-jp/posts/2022-07-07-155059.470834/","summary":"自分の思索やらを記録しておきたいという要望が以前からあり、今までは物理のノートやTwitter, note, Zennや社内wikiなどに書いていたが、\nデータが手元に残らないため失われる可能性がある 一元管理できない 内容を機械処理（翻訳、言語解析等）にかけるのが面倒 relationalな内容をそのように管理/取り扱いすることができない という問題があった。\nrelationalな内容の管理とは、アイデアや思想はその周辺のアイデアとのつながりがあってこそ活きるので、人間の頭の中で起きているような連想を行える何者かのこと。\n要件 このサイトのコンセプトはそのまま要件になっている\nなんでも書ける 書いたものはローカル/GitHubに残せる 書いたものを構造化できる 書いたものを後処理にかけられる 仕様 Git管理にする 静的HTMLをホスティングする 動的にする理由もないし… ホスティングはGitHub Pagesを利用 楽やねん ジェネレータはHugoを利用 なんでも良かったのだが、元コンテンツをMarkdownで記述できることと、GitHub Pagesが利用しているJekyllはGitHub Action上での変更容易性がなさそう\u0026amp;Ruby製なので中立のHugoにした ビルド\u0026amp;デプロイはGitHub Actionを利用 楽やねん relationalな内容の管理 どうしようね？ 実装・運用 静的HTML生成〜公開はHugoのドキュメンテーションが詳しく、おおよそ詰まらずにできた\n→ Hugoを使用したGitHub Pages用の静的HTML生成\nrelationalな内容の管理 実装を試みたことはある（BidirectionalEditor）がデータがない状態ではモチベーションが続かなかったので、まずコンテンツを拡充するのが当面の目標。\n各記事/記事中の用語に対してその説明/他の記事が紐づけられていて、ユーザー体験としては相互にリンクされたそれを自由に行き来できるというものになるはず。\n静的HTML + 手作業で行うこともおそらく可能なのでスモールスタートでやってみてもいい。\n本格的に機械的に行うなら毎ビルド時に総ざらいするよりDB入れたほうがいいが…とりま体験を先に作ってみましょう。\nその他 GitHub ActionでHugoのビルドに使用している peaceiris/actions-gh-pages@v3 はかなり用途が特定されている印象があるので複雑な処理を挟む場合は自前で書き直すかも ","title":"このサイトについて"},{"content":"人工生命研究会#4でお勧めされた本\nRolf Pheifer 知能の原理 Niklas Luhmann 自己言及性について Humberto Maturana 知恵の樹 ウムベルトの本 身体化された心 精神と自然 肝心の勧められた理由を忘れた\nDDD関連でお勧めされた本\nエンタープライズアプリケーションアーキテクチャパターン みんな読んでるのは実践ドメイン駆動設計 ","permalink":"https://mitsuyoshi-yamazaki.github.io/ja-jp/posts/2022-07-07-150404.782474/","summary":"人工生命研究会#4でお勧めされた本\nRolf Pheifer 知能の原理 Niklas Luhmann 自己言及性について Humberto Maturana 知恵の樹 ウムベルトの本 身体化された心 精神と自然 肝心の勧められた理由を忘れた\nDDD関連でお勧めされた本\nエンタープライズアプリケーションアーキテクチャパターン みんな読んでるのは実践ドメイン駆動設計 ","title":"2022 07 07 15:04:04.782474"},{"content":"テスト記事\n","permalink":"https://mitsuyoshi-yamazaki.github.io/ja-jp/posts/test/","summary":"テスト記事","title":"Test"}]